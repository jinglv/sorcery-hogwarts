{"remainingRequest":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Project.vue?vue&type=style&index=0&id=044d0aa3&scoped=true&lang=css&","dependencies":[{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Project.vue","mtime":1664416934736},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/css-loader/dist/cjs.js","mtime":1663752625181},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1663752598650},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/postcss-loader/src/index.js","mtime":1663752611807},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js","mtime":1663752598514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idG4gewogIG1hcmdpbjogMTBweDsKfQoKLnNtYWxsQnRuIHsKICBtYXJnaW46IDNweDsKfQo="},{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmQA;AACA;AACA;;AAEA;AACA;AACA","file":"Project.vue","sourceRoot":"src/components/project","sourcesContent":["<template>\n    <div>\n      <v-btn color=\"success\" class=\"btn\" @click=\"addDialog = true\">创建</v-btn>\n      <!--添加Jenkins-->\n      <v-dialog v-model=\"addDialog\" width=\"500px\">\n        <v-card>\n          <v-card-title>新增项目</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"projectName\" label=\"项目名称\" />\n            <v-text-field v-model=\"gitName\" label=\"Git项目名称\" />\n            <v-text-field v-model=\"gitAddress\" label=\"Git项目地址\" />\n            <v-text-field v-model=\"gitCredentialsId\" label=\"Git认证\" />\n            <v-text-field v-model=\"description\" label=\"项目描述\" />\n            <v-file-input multiple v-model=\"image\" label=\"图片\"/>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" text @click=\"addDialog = false\">取消</v-btn>\n            <v-btn color=\"primary\" @click=\"saveProject()\">保存</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n  \n      <!--项目卡片-->\n      <template>\n        <v-container\n          class=\"spacing-playground pa-12\"\n          fluid\n        >\n        <v-row dense>\n          <v-col\n            v-for=\"project in projects\"\n            :key=\"project.projectName\"\n          >\n          <v-card width=\"500px\">\n              <v-img\n                :src=\"project.image\"\n                class=\"white--text align-end\"\n                gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n                height=\"200px\"\n              >\n              <v-card-title v-text=\"project.projectName\" />\n                </v-img>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"primary\" dark @click=\"detailProject(project.id)\">详情</v-btn>\n                  <v-btn color=\"success\" dark @click=\"editProject(project.id)\">编辑</v-btn>\n                  <v-btn color=\"error\" dark @click=\"deleteProject(project.id)\">删除</v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-container>\n      </template>\n\n      <!--项目详情-->\n      <v-dialog v-model=\"detailDialog\" width=\"500px\">\n        <v-card>\n          <v-card-title>项目详情</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"projectDetails.projectName\" :disabled=\"true\" label=\"项目名称\" />\n            <v-text-field v-model=\"projectDetails.gitName\" label=\"Git项目名称\" />\n            <v-text-field v-model=\"projectDetails.gitAddress\" label=\"Git项目地址\" />\n            <v-text-field v-model=\"projectDetails.gitCredentialsId\" label=\"Git认证\" />\n            <v-text-field v-model=\"projectDetails.description\" label=\"项目描述\" />\n            <v-img :src=\"projectDetails.image\" />\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" text @click=\"detailDialog = false\">关闭</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n  \n      <!--编辑Project-->\n      <v-dialog v-model=\"editDialog\" width=\"500px\">\n        <v-card>\n          <v-card-title>编辑项目</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"projectDetails.projectName\" label=\"项目名称\" />\n            <v-text-field v-model=\"projectDetails.gitName\" label=\"Git项目名称\" />\n            <v-text-field v-model=\"projectDetails.gitAddress\" label=\"Git项目地址\" />\n            <v-text-field v-model=\"projectDetails.gitCredentialsId\" label=\"Git认证\" />\n            <v-text-field v-model=\"projectDetails.description\" label=\"项目描述\" />\n            <v-img :src=\"projectDetails.image\" />\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" text @click=\"editDialog = false\">取消</v-btn>\n            <v-btn color=\"primary\" @click=\"saveEditProject(projectDetails.id)\">保存</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n  \n      <!--分页显示处理-->\n      <v-pagination v-if=\"pageLength>0\" v-model=\"currentPage\" :length=\"pageLength\" @input=\"getProjectList()\"\n                    total-visible=\"7\"/>\n    </div>\n  </template>\n  <script>\n  export default {\n    data() {\n      return {\n        addDialog: false,\n        projectName: '',\n        gitName: '',\n        gitAddress: '',\n        gitCredentialsId: '',\n        description: '',\n        image: [],\n        projects: [],\n        currentPage: 1,\n        pageLength: 0,\n        projectId: 0,\n        projectDetails: '',\n        detailDialog: false,\n        editDialog: false\n      }\n    },\n    created() {\n      this.getProjectList()\n    },\n    methods: {\n      // 添加Project\n      saveProject() {\n        let params = new FormData()\n        params.append('projectName', this.projectName)\n        params.append('gitName', this.gitName)\n        params.append('gitAddress', this.gitAddress)\n        params.append('gitCredentialsId', this.gitCredentialsId)\n        params.append('description', this.description)\n        params.append('image', this.image[0])\n        this.$api.project.addProject(params).then(res => {\n          if (res.data.resultCode === 1) {\n            if (this.instanceNotify) {\n              this.instanceNotify.close()\n            }\n            this.instanceNotify = this.$notify({\n              title: '成功',\n              message: '添加成功',\n              type: 'success'\n            })\n            this.getProjectList()\n            this.addDialog = false\n          } else {\n            if (this.notifyInstance) {\n              this.notifyInstance.close()\n            }\n            this.notifyInstance = this.$notify({\n              title: '错误',\n              message: res.data.message,\n              type: 'error'\n            })\n          }\n        })\n      },\n      // 编辑Jenkins\n      editProject(item) {\n        this.getProjectDetail(item)\n        this.editDialog = true\n      },\n      // 保存编辑Jenkins\n      saveEditProject(item) {\n        let params = new FormData()\n        params.append('id', item)\n        params.append('projectName', this.projectName)\n        params.append('gitName', this.gitName)\n        params.append('gitAddress', this.gitAddress)\n        params.append('gitCredentialsId', this.gitCredentialsId)\n        params.append('description', this.description)\n        params.append('image', this.image[0])\n        this.$api.project.editProject(params).then(res => {\n          // 调用接口，返回resultCode=1，说明接口调用成功\n          if (res.data.resultCode === 1) {\n            if (this.instanceNotify) {\n              this.instanceNotify.close()\n            }\n            this.instanceNotify = this.$notify({\n              title: '成功',\n              message: '编辑成功',\n              type: 'success'\n            })\n            this.getProjectList()\n            this.editDialog = false\n          } else {\n            if (this.notifyInstance) {\n              this.notifyInstance.close()\n            }\n            this.notifyInstance = this.$notify({\n              title: '错误',\n              message: res.data.message,\n              type: 'error'\n            })\n          }\n        })\n      },\n      // 删除Project\n      deleteProject(item) {\n        this.$api.project.deleteProject(item).then(res => {\n          if (res.data.resultCode === 1) {\n            if (this.instanceNotify) {\n              this.instanceNotify.close()\n            }\n            this.instanceNotify = this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success'\n            })\n            this.getProjectList()\n          } else {\n            if (this.notifyInstance) {\n              this.notifyInstance.close()\n            }\n            this.notifyInstance = this.$notify({\n              title: '错误',\n              message: res.data.message,\n              type: 'error'\n            })\n          }\n        })\n      },\n      // 分页查询Project列表\n      getProjectList() {\n        let params = {\n          pageNum: this.currentPage,\n          pageSize: 6,\n        }\n        this.$api.project.getProjectList(params).then(res => {\n          // 调用接口，返回resultCode=1，说明接口调用成功\n          if (res.data.resultCode === 1) {\n            let imagesLength = res.data.data.data.length\n            for(let i = 0; i < imagesLength; i++) {\n              res.data.data.data[i].image =  process.env.VUE_APP_URL + res.data.data.data[i].image\n            }\n            this.projects = res.data.data.data\n            this.rows = res.data.data.recordsTotal\n            // 每5条为一页\n            this.pageLength = Math.ceil(this.rows / 5)\n          }\n        })\n      },\n      detailProject(item) {\n        this.getProjectDetail(item)\n        this.detailDialog = true\n      },\n      // 根据id查询项目详情\n      getProjectDetail(item) {\n        this.$api.project.projectDetail(item).then(res => {\n          // 调用接口，返回resultCode=1，说明接口调用成功\n          if (res.data.resultCode === 1) {\n            res.data.data.image = process.env.VUE_APP_URL + res.data.data.image\n            this.projectDetails = res.data.data\n          }\n        })\n      }\n    }\n  }\n  </script>\n  <style scoped>\n  .btn {\n    margin: 10px;\n  }\n  \n  .smallBtn {\n    margin: 3px;\n  }\n  </style>\n  "]}]}