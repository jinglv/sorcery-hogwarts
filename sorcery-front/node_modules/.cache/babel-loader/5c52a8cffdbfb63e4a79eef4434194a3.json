{"remainingRequest":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Cases.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Cases.vue","mtime":1663753587875},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/babel-loader/lib/index.js","mtime":1663752630001},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js","mtime":1663752598514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cases.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-btn color=\"success\" class=\"btn\" @click=\"addDialog=true\">添加测试用例</v-btn>\n    <v-btn color=\"primary\" class=\"btn\" @click=\"taskDialog=true\">生成测试任务</v-btn>\n    <!--添加测试用例-->\n    <v-dialog v-model=\"addDialog\" width=\"400\">\n      <v-card>\n        <v-card-title>添加测试用例</v-card-title>\n        <v-card-text>\n          <v-text-field v-model=\"caseName\" label=\"测试用例名称\"/>\n          <v-select v-model=\"selectType\" :items=\"selectItem\" label=\"选择用例类型\"/>\n          <v-textarea v-if=\"selectType===1\" v-model=\"caseData\" label=\"输入文本信息\"/>\n          <v-file-input v-if=\"selectType===2\" v-model=\"file\" label=\"选择文件\"/>\n          <v-text-field v-model=\"remark\" label=\"备注\"></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <!--按钮放到右边-->\n          <v-spacer></v-spacer>\n          <v-btn text color=\"primary\" @click=\"addDialog=false\">取消</v-btn>\n          <v-btn color=\"primary\" @click=\"addCase()\">确认</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <!--生成测试任务测试-->\n    <v-dialog v-model=\"taskDialog\" width=\"400px\">\n      <v-card>\n        <v-card-title>生成测试任务</v-card-title>\n        <v-card-text>\n          <v-text-field label=\"测试任务名称\" v-model=\"taskName\"/>\n          <v-text-field label=\"备注\" v-model=\"taskRemark\"/>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer>\n            <v-btn text color=\"primary\" @click=\"taskDialog=false\">取消</v-btn>\n            <v-btn color=\"primary\" @click=\"addTask()\">确认</v-btn>\n          </v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <!--测试用例列表展示-->\n    <template>\n      <v-data-table\n          v-model=\"selected\"\n          :headers=\"headers\"\n          :items=\"desserts\"\n          :single-select=\"singleSelect\"\n          show-select\n          hide-default-footer\n          class=\"elevation-1\"\n      >\n        <template v-slot:item.action=\"{item}\">\n          <v-btn small color=\"primary\" @click=\"editItem(item)\" class=\"smallBtn\">修改</v-btn>\n          <v-btn small color=\"error\" @click=\"deleteCases(item)\" class=\"smallBtn\">删除</v-btn>\n        </template>\n\n        <template v-slot:top>\n          <v-switch\n              v-model=\"singleSelect\"\n              label=\"Single select\"\n              class=\"pa-3\"\n          ></v-switch>\n        </template>\n      </v-data-table>\n    </template>\n\n    <!--修改测试用例-->\n    <v-dialog v-model=\"editDialog\" width=\"400\">\n      <v-card>\n        <v-card-title>修改</v-card-title>\n        <v-card-text>\n          <v-text-field v-model=\"caseName\" label=\"用例名称\"/>\n          <v-textarea v-if=\"selectType===1\" v-model=\"caseData\" label=\"输入文本信息\"/>\n          <v-file-input v-if=\"selectType===2\" v-model=\"file\" label=\"选择文件\"/>\n          <v-text-field label=\"备注\" v-model=\"remark\" />\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn text color=\"primary\" @click=\"editDialog=false\">取消</v-btn>\n          <v-btn color=\"primary\" @click=\"editCases()\">确认</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <!--分页显示处理-->\n    <v-pagination v-if=\"pageLength>0\" v-model=\"currentPage\" :length=\"pageLength\" @input=\"getCaseList()\"\n                  total-visible=\"7\"/>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      singleSelect: false,\n      selected: [],\n      headers: [\n        {\n          text: 'ID',\n          align: 'start',\n          sortable: false,\n          value: 'id',\n        },\n        {text: '测试用例名称', value: 'caseName'},\n        {text: '测试用例数据', value: 'caseData'},\n        {text: '备注', value: 'remark'},\n        {text: '操作', value: 'action'}\n      ],\n      desserts: [],\n      addDialog: false,\n      caseName: '',\n      selectType: 1,\n      selectItem: [\n        {text: '文本', value: 1},\n        {text: '文件', value: 2}\n      ],\n      caseData: '',\n      file: null,\n      remark: '',\n      editDialog: false,\n      editId: '',\n      taskDialog: false,\n      taskName: '',\n      taskRemark: '',\n      currentPage: 1,\n      pageLength: 0\n    }\n  },\n  created() {\n    this.getCaseList()\n  },\n  methods: {\n    // 新增测试用例\n    addCase() {\n      if (this.selectType === 1) {\n        let params = {\n          caseName: this.caseName,\n          caseData: this.caseData,\n          remark: this.remark\n        }\n        // 通过文本，新增测试用例\n        this.$api.cases.addCaseText(params).then(res => {\n          // 调用接口，返回resultCode=1，说明接口调用成功\n          if (res.data.resultCode === 1) {\n            if (this.instanceNotify) {\n              this.instanceNotify.close()\n            }\n            this.instanceNotify = this.$notify({\n              title: '成功',\n              message: '添加成功',\n              type: 'success'\n            })\n            // 测试用例添加成功，关闭弹窗\n            this.addDialog = false\n            // 测试用例添加成功，刷新列表\n            this.getCaseList()\n          } else {\n            if (this.notifyInstance) {\n              this.notifyInstance.close()\n            }\n            this.notifyInstance = this.$notify({\n              title: '错误',\n              message: res.data.message,\n              type: 'error'\n            })\n          }\n        })\n      } else {\n        let params = new FormData()\n        params.append('caseFile', this.file)\n        params.append('caseData', this.caseData)\n        params.append('caseName', this.caseName)\n        params.append('remark', this.remark)\n        // 通过文件，新增测试用例\n        this.$api.cases.addCaseFile(params).then(res => {\n          // 调用接口，返回resultCode=1，说明接口调用成功\n          if (res.data.resultCode === 1) {\n            if (this.instanceNotify) {\n              this.instanceNotify.close()\n            }\n            this.instanceNotify = this.$notify({\n              title: '成功',\n              message: '添加成功',\n              type: 'success'\n            })\n            // 测试用例添加成功，关闭弹窗\n            this.addDialog = false\n            // 测试用例添加成功，刷新列表\n            this.getCaseList()\n          } else {\n            if (this.notifyInstance) {\n              this.notifyInstance.close()\n            }\n            this.notifyInstance = this.$notify({\n              title: '错误',\n              message: res.data.message,\n              type: 'error'\n            })\n          }\n        })\n      }\n    },\n    // 测试用例列表\n    getCaseList() {\n      let params = {\n        pageNum: this.currentPage,\n        pageSize: 5,\n      }\n      this.$api.cases.getCaseList(params).then(res => {\n        // 调用接口，返回resultCode=1，说明接口调用成功\n        if (res.data.resultCode === 1) {\n          this.desserts = res.data.data.data\n          this.rows = res.data.data.recordsTotal\n          // 每5条为一页\n          this.pageLength = Math.ceil(this.rows / 5)\n        }\n      })\n    },\n    editItem(item) {\n      this.editId = item.id\n      this.caseName = item.caseName\n      this.caseData = item.caseData\n      this.editDialog = true\n    },\n    // 修改测试用例信息\n    editCases() {\n      let params = {\n        id: this.editId,\n        caseName: this.caseName,\n        caseData: this.caseData,\n        remark: this.remark\n      }\n      this.$api.cases.editCase(params).then(res => {\n        // 调用接口，返回resultCode=1，说明接口调用成功\n        if (res.data.resultCode === 1) {\n          if (this.instanceNotify) {\n            this.instanceNotify.close()\n          }\n          this.instanceNotify = this.$notify({\n            title: '成功',\n            message: '修改成功',\n            type: 'success'\n          })\n          // 修改用例添加成功，关闭弹窗\n          this.editDialog = false\n          // 修改用例添加成功，刷新列表\n          this.getCaseList()\n        } else {\n          if (this.notifyInstance) {\n            this.notifyInstance.close()\n          }\n          this.notifyInstance = this.$notify({\n            title: '错误',\n            message: res.data.message,\n            type: 'error'\n          })\n        }\n      })\n    },\n    // 删除测试用例\n    deleteCases(item) {\n      let params = {\n        id: item.id\n      }\n      this.$api.cases.deleteCase(params).then(res => {\n        // 调用接口，返回resultCode=1，说明接口调用成功\n        if (res.data.resultCode === 1) {\n          if (this.instanceNotify) {\n            this.instanceNotify.close()\n          }\n          this.instanceNotify = this.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success'\n          })\n          // 删除用例添加成功，刷新列表\n          this.getCaseList()\n        } else {\n          if (this.notifyInstance) {\n            this.notifyInstance.close()\n          }\n          this.notifyInstance = this.$notify({\n            title: '错误',\n            message: res.data.message,\n            type: 'error'\n          })\n        }\n      })\n    },\n    // 添加测试任务\n    addTask() {\n      let casesId = []\n      for (let i = 0; i < this.selected.length; i++) {\n        casesId.push(this.selected[i].id)\n      }\n      let params = {\n        caseIdList: casesId,\n        testTask: {\n          name: this.taskName,\n          remark: this.taskRemark\n        }\n      }\n      this.$api.task.addTask(params).then(res => {\n        if (res.data.resultCode === 1) {\n          if (this.instanceNotify) {\n            this.instanceNotify.close()\n          }\n          this.instanceNotify = this.$notify({\n            title: '成功',\n            message: '添加成功',\n            type: 'success'\n          })\n          // 添加测试任务成功，关闭弹窗\n          this.taskDialog = false\n          // 路由跳转Task页面\n          this.$router.push({name: 'Task'})\n        } else {\n          if (this.notifyInstance) {\n            this.notifyInstance.close()\n          }\n          this.notifyInstance = this.$notify({\n            title: '错误',\n            message: res.data.message,\n            type: 'error'\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n.btn {\n  margin: 10px;\n}\n\n.smallBtn {\n  margin: 3px;\n}\n</style>\n"],"sourceRoot":"src/components/project"}]}