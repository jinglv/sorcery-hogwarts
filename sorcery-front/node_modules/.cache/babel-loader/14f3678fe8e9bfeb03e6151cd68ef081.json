{"remainingRequest":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Task.vue","mtime":1663227236663},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/babel-loader/lib/index.js","mtime":1663752630001},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js","mtime":1663752598514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdERpYWxvZzogZmFsc2UsCiAgICAgIHRhc2tOYW1lOiAnJywKICAgICAgcmVtYXJrOiAnJywKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAnSUQnLAogICAgICAgIHZhbHVlOiAnaWQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAn5rWL6K+V5Lu75Yqh5ZCN56ewJywKICAgICAgICB2YWx1ZTogJ25hbWUnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnSmVua2luc0lkJywKICAgICAgICB2YWx1ZTogJ3Rlc3RKZW5raW5zSWQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAn5rWL6K+V55So5L6L5pWw6YePJywKICAgICAgICB2YWx1ZTogJ2Nhc2VDb3VudCcKICAgICAgfSwgewogICAgICAgIHRleHQ6ICfmiafooYzohJrmnKwnLAogICAgICAgIHZhbHVlOiAndGVzdENvbW1hbmQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAn5omn6KGM54q25oCBJywKICAgICAgICB2YWx1ZTogJ3N0YXR1cycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICfmk43kvZwnLAogICAgICAgIHZhbHVlOiAnYWN0aW9uJwogICAgICB9XSwKICAgICAgZGVzc2VydHM6IFtdLAogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgcGFnZUxlbmd0aDogMAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRhc2tMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDnvJbovpHmtYvor5Xku7vliqEKICAgIGVkaXRUYXNrOiBmdW5jdGlvbiBlZGl0VGFzayhpdGVtKSB7CiAgICAgIHRoaXMudGFza05hbWUgPSBpdGVtLm5hbWU7CiAgICAgIHRoaXMucmVtYXJrID0gaXRlbS5yZW1hcms7CiAgICAgIHRoaXMuZWRpdElkID0gaXRlbS5pZDsKICAgICAgdGhpcy5lZGl0RGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDkv53lrZjnvJbovpHnmoTmtYvor5Xku7vliqEKICAgIHNhdmVFZGl0OiBmdW5jdGlvbiBzYXZlRWRpdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgbmFtZTogdGhpcy50YXNrTmFtZSwKICAgICAgICByZW1hcms6IHRoaXMucmVtYXJrLAogICAgICAgIGlkOiB0aGlzLmVkaXRJZAogICAgICB9OwogICAgICB0aGlzLiRhcGkudGFzay5lZGl0VGFzayhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIOiwg+eUqOaOpeWPo++8jOi/lOWbnnJlc3VsdENvZGU9Me+8jOivtOaYjuaOpeWPo+iwg+eUqOaIkOWKnwogICAgICAgIGlmIChyZXMuZGF0YS5yZXN1bHRDb2RlID09PSAxKSB7CiAgICAgICAgICBpZiAoX3RoaXMuaW5zdGFuY2VOb3RpZnkpIHsKICAgICAgICAgICAgX3RoaXMuaW5zdGFuY2VOb3RpZnkuY2xvc2UoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpcy5pbnN0YW5jZU5vdGlmeSA9IF90aGlzLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfnvJbovpHmiJDlip8nLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzLmdldFRhc2tMaXN0KCk7CgogICAgICAgICAgX3RoaXMuZWRpdERpYWxvZyA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAoX3RoaXMubm90aWZ5SW5zdGFuY2UpIHsKICAgICAgICAgICAgX3RoaXMubm90aWZ5SW5zdGFuY2UuY2xvc2UoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpcy5ub3RpZnlJbnN0YW5jZSA9IF90aGlzLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ+mUmeivrycsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5Yig6Zmk5rWL6K+V5Lu75YqhCiAgICBkZWxldGVUYXNrOiBmdW5jdGlvbiBkZWxldGVUYXNrKGl0ZW0pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIGlkOiBpdGVtLmlkCiAgICAgIH07CiAgICAgIHRoaXMuJGFwaS50YXNrLmRlbGV0ZVRhc2socGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAvLyDosIPnlKjmjqXlj6PvvIzov5Tlm55yZXN1bHRDb2RlPTHvvIzor7TmmI7mjqXlj6PosIPnlKjmiJDlip8KICAgICAgICBpZiAocmVzLmRhdGEucmVzdWx0Q29kZSA9PT0gMSkgewogICAgICAgICAgaWYgKF90aGlzMi5pbnN0YW5jZU5vdGlmeSkgewogICAgICAgICAgICBfdGhpczIuaW5zdGFuY2VOb3RpZnkuY2xvc2UoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczIuaW5zdGFuY2VOb3RpZnkgPSBfdGhpczIuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAn5oiQ5YqfJywKICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnycsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXMyLmdldFRhc2tMaXN0KCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChfdGhpczIubm90aWZ5SW5zdGFuY2UpIHsKICAgICAgICAgICAgX3RoaXMyLm5vdGlmeUluc3RhbmNlLmNsb3NlKCk7CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMyLm5vdGlmeUluc3RhbmNlID0gX3RoaXMyLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ+mUmeivrycsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5rWL6K+V5Lu75Yqh5YiX6KGoCiAgICBnZXRUYXNrTGlzdDogZnVuY3Rpb24gZ2V0VGFza0xpc3QoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBwYWdlTnVtOiB0aGlzLmN1cnJlbnRQYWdlLAogICAgICAgIHBhZ2VTaXplOiAxMAogICAgICB9OwogICAgICB0aGlzLiRhcGkudGFzay5nZXRUYXNrTGlzdChwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMy5kZXNzZXJ0cyA9IHJlcy5kYXRhLmRhdGEuZGF0YTsKICAgICAgICBfdGhpczMucm93cyA9IHJlcy5kYXRhLmRhdGEucmVjb3Jkc1RvdGFsOwogICAgICAgIF90aGlzMy5wYWdlTGVuZ3RoID0gTWF0aC5jZWlsKF90aGlzMy5yb3dzIC8gMTApOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmiafooYzmtYvor5Xku7vliqEKICAgIGRvVGFzazogZnVuY3Rpb24gZG9UYXNrKGl0ZW0pIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIHRhc2tJZDogaXRlbS5pZAogICAgICB9OwogICAgICB0aGlzLiRhcGkudGFzay5kb1Rhc2socGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEucmVzdWx0Q29kZSA9PT0gMSkgewogICAgICAgICAgaWYgKF90aGlzNC5pbnN0YW5jZU5vdGlmeSkgewogICAgICAgICAgICBfdGhpczQuaW5zdGFuY2VOb3RpZnkuY2xvc2UoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczQuaW5zdGFuY2VOb3RpZnkgPSBfdGhpczQuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAn5oiQ5YqfJywKICAgICAgICAgICAgbWVzc2FnZTogJ+a1i+ivleS7u+WKoeaJp+ihjCcsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM0LmdldFRhc2tMaXN0KCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChfdGhpczQubm90aWZ5SW5zdGFuY2UpIHsKICAgICAgICAgICAgX3RoaXM0Lm5vdGlmeUluc3RhbmNlLmNsb3NlKCk7CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXM0Lm5vdGlmeUluc3RhbmNlID0gX3RoaXM0LiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ+mUmeivrycsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlcy5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5rWL6K+V5oql5ZGKCiAgICBnZXRBbGx1cmU6IGZ1bmN0aW9uIGdldEFsbHVyZShpdGVtKSB7CiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgaWQ6IGl0ZW0uaWQKICAgICAgfTsKICAgICAgdGhpcy4kYXBpLnJlcG9ydC5nZXRBbGx1cmUocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAvLyBfYmxhbmvmiZPlvIDmlrDnmoTnqpflj6PvvIzmtY/op4jlmajnqpflj6Pot7PovawKICAgICAgICB3aW5kb3cub3BlbihyZXMuZGF0YS5kYXRhLmFsbHVyZVJlcG9ydFVybCwgIl9ibGFuayIpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!--Task信息列表-->\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"desserts\"\n        class=\"elevation-1\"\n        hide-default-footer\n    >\n      <template v-slot:item.status=\"{item}\">\n        <div v-if=\"item.status===0\">无效</div>\n        <div v-else-if=\"item.status===1\">新建</div>\n        <div v-else-if=\"item.status===2\">执行中</div>\n        <div v-else-if=\"item.status===3\"><a @click=\"getAllure(item)\">执行完成</a></div>\n      </template>\n\n      <template v-slot:item.shortTestCommand=\"{item}\">\n        <v-hover v-slot:default=\"{hover}\">\n          <div>\n            <span class=\"short-test-command\">{{ item.testCommand }}</span>\n            <div v-if=\"hover\" class=\" transition-fast-in-fast-out grey v-card--reveal test-command\">\n              {{ item.testCommand }}\n            </div>\n          </div>\n        </v-hover>\n      </template>\n\n      <template v-slot:item.action=\"{item}\">\n        <!--执行状态为1（新建）则可以点击执行-->\n        <v-btn v-if=\"item.status===1\" color=\"primary\" small @click=\"doTask(item)\" class=\"btn\">执行任务</v-btn>\n        <v-btn small v-else disabled>执行任务</v-btn>\n        <v-btn color=\"success\" small @click=\"editTask(item)\" class=\"btn\">编辑</v-btn>\n        <v-btn color=\"error\" small @click=\"deleteTask(item)\" class=\"btn\">删除</v-btn>\n      </template>\n    </v-data-table>\n\n    <!--编辑测试任务-->\n    <v-dialog v-model=\"editDialog\" width=\"400px\">\n      <v-card>\n        <v-card-title>编辑任务</v-card-title>\n        <v-card-text>\n          <v-text-field label=\"任务名称\" v-model=\"taskName\"></v-text-field>\n          <v-text-field label=\"备注\" v-model=\"remark\"></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer>\n            <v-btn color=\"primary\" text @click=\"editDialog=false\">取消</v-btn>\n            <v-btn color=\"primary\" @click=\"saveEdit()\">确认</v-btn>\n          </v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!--分页显示处理-->\n    <v-pagination v-if=\"pageLength>0\" v-model=\"currentPage\" :length=\"pageLength\" @input=\"getTaskList()\"\n                  total-visible=\"7\"></v-pagination>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      editDialog: false,\n      taskName: '',\n      remark: '',\n      headers: [\n        {text: 'ID', value: 'id'},\n        {text: '测试任务名称', value: 'name'},\n        {text: 'JenkinsId', value: 'testJenkinsId'},\n        {text: '测试用例数量', value: 'caseCount'},\n        {text: '执行脚本', value: 'testCommand'},\n        {text: '执行状态', value: 'status'},\n        {text: '操作', value: 'action'},\n      ],\n      desserts: [],\n      currentPage: 1,\n      pageLength: 0\n    }\n  },\n  created() {\n    this.getTaskList()\n  },\n  methods: {\n    // 编辑测试任务\n    editTask(item) {\n      this.taskName = item.name\n      this.remark = item.remark\n      this.editId = item.id\n      this.editDialog = true\n    },\n    // 保存编辑的测试任务\n    saveEdit() {\n      let params = {\n        name: this.taskName,\n        remark: this.remark,\n        id: this.editId\n      }\n      this.$api.task.editTask(params).then(res => {\n        // 调用接口，返回resultCode=1，说明接口调用成功\n        if (res.data.resultCode === 1) {\n          if (this.instanceNotify) {\n            this.instanceNotify.close()\n          }\n          this.instanceNotify = this.$notify({\n            title: '成功',\n            message: '编辑成功',\n            type: 'success'\n          })\n          this.getTaskList()\n          this.editDialog = false\n        } else {\n          if (this.notifyInstance) {\n            this.notifyInstance.close()\n          }\n          this.notifyInstance = this.$notify({\n            title: '错误',\n            message: res.data.message,\n            type: 'error'\n          })\n        }\n      })\n    },\n    // 删除测试任务\n    deleteTask(item) {\n      let params = {\n        id: item.id\n      }\n      this.$api.task.deleteTask(params).then(res => {\n        // 调用接口，返回resultCode=1，说明接口调用成功\n        if (res.data.resultCode === 1) {\n          if (this.instanceNotify) {\n            this.instanceNotify.close()\n          }\n          this.instanceNotify = this.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success'\n          })\n          this.getTaskList()\n        } else {\n          if (this.notifyInstance) {\n            this.notifyInstance.close()\n          }\n          this.notifyInstance = this.$notify({\n            title: '错误',\n            message: res.data.message,\n            type: 'error'\n          })\n        }\n      })\n    },\n    // 测试任务列表\n    getTaskList() {\n      let params = {\n        pageNum: this.currentPage,\n        pageSize: 10,\n      }\n      this.$api.task.getTaskList(params).then(res => {\n        this.desserts = res.data.data.data\n        this.rows = res.data.data.recordsTotal\n        this.pageLength = Math.ceil(this.rows / 10)\n      })\n    },\n    // 执行测试任务\n    doTask(item) {\n      let params = {\n        taskId: item.id\n      }\n      this.$api.task.doTask(params).then(res => {\n        if (res.data.resultCode === 1) {\n          if (this.instanceNotify) {\n            this.instanceNotify.close()\n          }\n          this.instanceNotify = this.$notify({\n            title: '成功',\n            message: '测试任务执行',\n            type: 'success'\n          })\n          this.getTaskList()\n        } else {\n          if (this.notifyInstance) {\n            this.notifyInstance.close()\n          }\n          this.notifyInstance = this.$notify({\n            title: '错误',\n            message: res.data.message,\n            type: 'error'\n          })\n        }\n      })\n    },\n    // 获取测试报告\n    getAllure(item) {\n      let params = {\n        id: item.id\n      }\n      this.$api.report.getAllure(params).then(res => {\n        // _blank打开新的窗口，浏览器窗口跳转\n        window.open(res.data.data.allureReportUrl, \"_blank\")\n      })\n    },\n  }\n}\n</script>\n<style scoped>\n.btn {\n  margin: 3px;\n}\n</style>\n"],"sourceRoot":"src/components/project"}]}