{"remainingRequest":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/babel-loader/lib/index.js!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/src/components/project/Report.vue","mtime":1663227236663},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/babel-loader/lib/index.js","mtime":1663752630001},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1663752628994},{"path":"/Users/lvjing/web-project/sorcery-hogwarts/sorcery-front/node_modules/vue-loader/lib/index.js","mtime":1663752598514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb3VudFg6IFtdLAogICAgICBjb3VudERhdGE6IFtdLAogICAgICBzdGF0dXNYOiBbXSwKICAgICAgc3RhdHVzRGF0YTogW10KICAgIH07CiAgfSwKICAvLyDmlrnms5XosIPnlKgKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLiRhcGkucmVwb3J0LmdldENhc2VDb3VudCgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICB2YXIgbGlzdERhdGE7CiAgICAgIGxpc3REYXRhID0gcmVzLmRhdGEuZGF0YTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdERhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAvLyBY6L2077yI5qiq6L2077yJ57uR5a6a5rWL6K+V5Lu75YqhaWQKICAgICAgICBfdGhpcy5jb3VudFgucHVzaCgi5Lu75YqhaWQ6IiArIGxpc3REYXRhW2ldLmlkKTsgLy8g57q16L2077yM57uR5a6a5rWL6K+V55So5L6L55qE5pWw6YePCgoKICAgICAgICBfdGhpcy5jb3VudERhdGEucHVzaChsaXN0RGF0YVtpXS5jYXNlQ291bnQpOwogICAgICB9CgogICAgICBfdGhpcy5kcmF3Q2hhcnQoKTsKICAgIH0pOwogICAgdGhpcy4kYXBpLnJlcG9ydC5nZXRTdGF0dXMoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgdmFyIGxpc3REYXRhID0gcmVzLmRhdGEuZGF0YS50YXNrRGF0YUR0b0xpc3Q7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3REYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgX3RoaXMuc3RhdHVzWC5wdXNoKGxpc3REYXRhW2ldLmRlc2MpOwoKICAgICAgICBfdGhpcy5zdGF0dXNEYXRhLnB1c2goewogICAgICAgICAgdmFsdWU6IGxpc3REYXRhW2ldLnRhc2tDb3VudCwKICAgICAgICAgIG5hbWU6IGxpc3REYXRhW2ldLmRlc2NyaXB0aW9uCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIF90aGlzLmRyYXdQaWUoKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g5oqY57q/5Zu+CiAgICBkcmF3Q2hhcnQ6IGZ1bmN0aW9uIGRyYXdDaGFydCgpIHsKICAgICAgLy8g5byV5YWlZWNoYXJ0cwogICAgICB2YXIgbXlFY2hhcnRzID0gcmVxdWlyZSgnZWNoYXJ0cycpOwoKICAgICAgdmFyIG15Q2hhcnQgPSBteUVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibXlDaGFydCIpKTsKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn5rWL6K+V5Lu75Yqh55So5L6L5pWw6YeP57uf6K6hJwogICAgICAgIH0sCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICBkYXRhOiB0aGlzLmNvdW50WAogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICB9LAogICAgICAgIC8vIOWdkOagh+i9tOWvueW6lOeahOaVsOaNrgogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIGRhdGE6IHRoaXMuY291bnREYXRhLAogICAgICAgICAgdHlwZTogJ2xpbmUnCiAgICAgICAgfV0KICAgICAgfSk7CiAgICB9LAogICAgLy8g6aW854q25Zu+CiAgICBkcmF3UGllOiBmdW5jdGlvbiBkcmF3UGllKCkgewogICAgICAvLyDlvJXlhaVlY2hhcnRzCiAgICAgIHZhciBteUVjaGFydHMgPSByZXF1aXJlKCdlY2hhcnRzJyk7CgogICAgICB2YXIgbXlDaGFydCA9IG15RWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwaWUiKSk7CiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn06IHtjfSAoe2R9JSknCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJywKICAgICAgICAgIGxlZnQ6IDEwLAogICAgICAgICAgZGF0YTogdGhpcy5zdGF0dXNEYXRhCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn5Lu75Yqh57G75Z6L57uf6K6hJywKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiBbJzUwJScsICc3MCUnXSwKICAgICAgICAgIGF2b2lkTGFiZWxPdmVybGFwOiBmYWxzZSwKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICBwb3NpdGlvbjogJ2NlbnRlcicKICAgICAgICAgIH0sCiAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgZm9udFNpemU6ICcyMCcsCiAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBsYWJlbExpbmU6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB0aGlzLnN0YXR1c0RhdGEKICAgICAgICB9XQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Report.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row>\n    <v-col cols=\"6\">\n      <div id=\"myChart\" style=\"width: 100%; height: 300px\"></div>\n    </v-col>\n    <v-col cols=\"6\">\n      <div id=\"pie\" style=\"width: 100%; height: 300px\"></div>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      countX: [],\n      countData: [],\n      statusX: [],\n      statusData: [],\n    }\n  },\n  // 方法调用\n  created() {\n    this.$api.report.getCaseCount().then(res => {\n      let listData\n      listData = res.data.data\n      for (let i = 0; i < listData.length; i++) {\n        // X轴（横轴）绑定测试任务id\n        this.countX.push(\"任务id:\" + listData[i].id)\n        // 纵轴，绑定测试用例的数量\n        this.countData.push(listData[i].caseCount)\n      }\n      this.drawChart()\n    })\n    this.$api.report.getStatus().then(res => {\n      const listData = res.data.data.taskDataDtoList\n      for (let i = 0; i < listData.length; i++) {\n        this.statusX.push(listData[i].desc)\n        this.statusData.push({value: listData[i].taskCount, name: listData[i].description})\n      }\n      this.drawPie()\n    })\n  },\n  methods: {\n    // 折线图\n    drawChart() {\n      // 引入echarts\n      const myEcharts = require('echarts');\n      const myChart = myEcharts.init(document.getElementById(\"myChart\"));\n      myChart.setOption({\n        title: {\n          text: '测试任务用例数量统计'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.countX\n        },\n        yAxis: {\n          type: 'value'\n        },\n        // 坐标轴对应的数据\n        series: [{\n          data: this.countData,\n          type: 'line'\n        }]\n      });\n    },\n    // 饼状图\n    drawPie() {\n      // 引入echarts\n      const myEcharts = require('echarts');\n      const myChart = myEcharts.init(document.getElementById(\"pie\"));\n      myChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          data: this.statusData\n        },\n        series: [\n          {\n            name: '任务类型统计',\n            type: 'pie',\n            radius: ['50%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '20',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: this.statusData\n          }\n        ]\n      })\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/components/project"}]}